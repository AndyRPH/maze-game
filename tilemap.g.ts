// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Swirl":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . 2 . 2 2 . . . . . 2 
2 . 2 . 2 . 2 . 2 . . 2 2 2 . 2 
2 . 2 2 2 . 2 2 2 . 2 2 . 2 . 2 
2 . . . . . . . . . . . . 2 . 2 
2 . 2 2 2 . 2 2 2 2 . 2 . 2 . 2 
2 . 2 . . . . . . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 2 2 . 2 . 2 2 2 
2 2 2 . 2 . . . . . . 2 . 2 . 2 
2 . . . 2 . 2 2 2 2 2 2 . 2 . 2 
2 . 2 . 2 . 2 . . . . . . . . 2 
2 . 2 . 2 . 2 2 2 2 2 2 2 2 . 2 
2 . 2 . 2 . . . . . . . . 2 . 2 
2 . 2 . 2 2 2 2 2 2 2 2 . 2 . 2 
2 . 2 . . . . . . . . 2 . 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,sprites.builtin.forestTiles0,myTiles.tile3], TileScale.Sixteen);
            case "Enclosed Swirl":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . 2 . 2 2 . . . . . 2 
2 . 2 . 2 . 2 . 2 . . 2 2 2 . 2 
2 . 2 2 2 . 2 2 2 . 2 2 . 2 . 2 
2 . 2 . . . . . . . . . . 2 . 2 
2 . 2 2 2 . 2 2 2 2 . 2 . 2 . 2 
2 . 2 . . . . . . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 2 2 . 2 2 2 . 2 
2 . 2 . 2 . . . . . . 2 . . . 2 
2 . 2 . 2 . 2 2 . 2 2 2 . 2 2 2 
2 . 2 . 2 . 2 . . . . . . . . 2 
2 . 2 . 2 . 2 2 2 2 2 2 . 2 2 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 2 2 2 2 2 2 2 . 2 . 2 
2 . . . . . . . . . . 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Swiese chese":
            case "level4":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 . . . . . . . . 2 . . 2 
2 2 . 2 . 2 2 2 2 2 2 . . . 2 2 
2 . . 2 . . . . . . 2 2 2 2 2 2 
2 . 2 2 2 2 2 2 2 . 2 2 2 . 2 2 
2 . . 2 2 . . . . . . . . . 2 2 
2 2 . 2 2 . 2 2 2 2 2 . 2 2 2 2 
2 . . 2 2 . 2 . 2 . . . 2 2 2 2 
2 . 2 . . . . . 2 . 2 2 2 2 2 2 
2 . . . 2 2 . 2 2 . 2 . . . 2 2 
2 2 . 2 . . . 2 . . . . 2 . . 2 
2 2 . 2 2 2 2 2 . 2 2 . 2 2 . 2 
2 . . . . 2 . . . 2 . . 2 . . 2 
2 2 . 2 . 2 2 2 2 2 . 2 2 . 2 2 
2 . . . . . . . 2 2 . 2 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4], TileScale.Sixteen);
            case "The Lot Of Lines":
            case "level3":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010203020302030202020302020202010102030203020303030203030202020101020202020202020302020303030301010203020302030303030202020202010102030203020302020202030203030101030303030203020303030302030201010202020202030203020202020302010102030303030302030203030303020101020302020202020302030203020201010202020303030303020302020202010103030303020202020203030203020101020202020203030303030202030201010203030303030203020303020302010102020202020202020202020203020101010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . 2 . 2 . . . 2 . . . . 2 
2 . 2 . 2 . 2 2 2 . 2 2 . . . 2 
2 . . . . . . . 2 . . 2 2 2 2 2 
2 . 2 . 2 . 2 2 2 2 . . . . . 2 
2 . 2 . 2 . 2 . . . . 2 . 2 2 2 
2 2 2 2 2 . 2 . 2 2 2 2 . 2 . 2 
2 . . . . . 2 . 2 . . . . 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 . . . . . 2 . 2 . 2 . . 2 
2 . . . 2 2 2 2 2 . 2 . . . . 2 
2 2 2 2 2 . . . . . 2 2 . 2 . 2 
2 . . . . . 2 2 2 2 2 . . 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 2 . 2 . 2 
2 . . . . . . . . . . . . 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Ziggety Zaggety":
            case "level5":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . 2 . . . 2 . . . 2 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . 2 2 
2 . 2 2 2 . 2 2 2 . 2 2 2 . 2 2 
2 . 2 2 2 . . . 2 . 2 . . . 2 2 
2 . . . 2 2 2 2 2 . 2 2 . 2 2 2 
2 . 2 . . . 2 . 2 . . 2 . . . 2 
2 . 2 2 2 . 2 . 2 2 . 2 2 2 . 2 
2 . . 2 . . 2 . . 2 . . 2 2 . 2 
2 2 2 2 . 2 2 2 . 2 2 2 2 . . 2 
2 . . . . 2 . 2 . . . 2 2 2 . 2 
2 . 2 2 2 2 . 2 2 2 . . . 2 . 2 
2 . . . . . . . . 2 2 2 . 2 . 2 
2 . 2 2 2 2 2 2 . . . . . 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Loops And Turns":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . 2 . . . . . . . . . . 2 
2 . 2 . . . 2 2 2 2 2 . 2 2 . 2 
2 . 2 2 2 . . . 2 . 2 . . . 2 2 
2 . . . 2 2 2 . 2 . 2 . 2 . 2 2 
2 . 2 . . . . . 2 . 2 . 2 . 2 2 
2 . 2 2 2 2 2 . 2 . 2 . 2 . . 2 
2 . . . . 2 . . 2 . . 2 2 2 . 2 
2 . 2 2 . 2 . 2 . 2 . 2 . . . 2 
2 . 2 2 . 2 . . . 2 . 2 . 2 . 2 
2 . . 2 . 2 2 2 . 2 . 2 . 2 2 2 
2 2 . 2 . . . . 2 2 . 2 . . . 2 
2 . . 2 . 2 2 . . 2 . . . 2 . 2 
2 2 2 2 . 2 . 2 . . . 2 2 2 . 2 
2 2 . . . . . 2 2 2 2 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile4,myTiles.tile3,myTiles.tile6,myTiles.tile2], TileScale.Sixteen);
            case "Starter Maze":
            case "level9":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . 2 . 2 2 2 2 2 2 2 2 
2 . 2 . 2 . 2 . . . . . . . 2 2 
2 . 2 . 2 . 2 . 2 2 2 2 2 . 2 2 
2 . 2 . 2 . 2 . 2 . . 2 . . 2 2 
2 . 2 . 2 . . . 2 . . 2 . 2 2 2 
2 . 2 . 2 . 2 2 2 2 . 2 . 2 2 2 
2 . 2 . 2 . . . . 2 . 2 . . . 2 
2 . 2 . 2 2 2 2 . 2 . 2 2 2 . 2 
2 . 2 . . . . 2 . . . . 2 2 . 2 
2 . 2 . 2 2 . 2 2 2 2 . 2 2 . 2 
2 . 2 . 2 2 . . . . 2 . . . . 2 
2 . 2 . 2 2 2 2 2 . 2 2 2 2 . 2 
2 . 2 . 2 2 2 2 2 . 2 2 2 2 . 2 
2 . . . 2 2 2 . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "The Grid":
            case "The grid1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . 2 . . 2 . . . 2 2 
2 . 2 2 2 2 . 2 . 2 2 2 2 . 2 2 
2 . . . . . . 2 . . . . . . . 2 
2 . 2 . 2 . 2 2 . 2 2 . 2 . 2 2 
2 . . . . . . . . 2 2 . 2 . 2 2 
2 . 2 . 2 . 2 2 2 2 2 . 2 . 2 2 
2 . . . . . . . . 2 2 . 2 . . 2 
2 . 2 . 2 . 2 2 . 2 2 . 2 2 . 2 
2 . . . . . . . 2 2 2 . 2 . . 2 
2 . 2 . 2 . 2 . . . 2 . 2 . 2 2 
2 . . . . . . 2 2 . 2 . 2 . . 2 
2 . 2 . 2 . 2 . . . 2 . 2 2 . 2 
2 . 2 2 2 . 2 . 2 2 2 . 2 . . 2 
2 . . . 2 . 2 . . . . . 2 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "Tetrets":
            case "Tetrets1":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010203020202020202030203030303010102030203030303020202020202020101020303020302030303020303030201010202020203020202020202020303010102030302020203030302030203020101020203030203030202020302020201010302020302030202030303020303010103030203020302030302030202020101020302030202020302020302030301010202020302030203020303020202010103020303020202020202030203020101030203030303030303030302030301010302030302020202030302020202010103020202020303020202020303020101010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 . . . . . . 2 . 2 2 2 2 2 
2 . 2 . 2 2 2 2 . . . . . . . 2 
2 . 2 2 . 2 . 2 2 2 . 2 2 2 . 2 
2 . . . . 2 . . . . . . . 2 2 2 
2 . 2 2 . . . 2 2 2 . 2 . 2 . 2 
2 . . 2 2 . 2 2 . . . 2 . . . 2 
2 2 . . 2 . 2 . . 2 2 2 . 2 2 2 
2 2 2 . 2 . 2 . 2 2 . 2 . . . 2 
2 . 2 . 2 . . . 2 . . 2 . 2 2 2 
2 . . . 2 . 2 . 2 . 2 2 . . . 2 
2 2 . 2 2 . . . . . . 2 . 2 . 2 
2 2 . 2 2 2 2 2 2 2 2 2 . 2 2 2 
2 2 . 2 2 . . . . 2 2 . . . . 2 
2 2 . . . . 2 2 . . . . 2 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "tilelevel2":
            case "tile4":return tile4;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile5":return tile5;
            case "myTile4":
            case "tile7":return tile7;
            case "myTile3":
            case "tile6":return tile6;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
